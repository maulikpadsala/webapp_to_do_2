@model List<To_Do_List_Part1.Models.to_do_task>
@{
    ViewData["Title"] = "Home Page";

}
<style>
    img{
        width:720px;
        height:auto;
    }
    .container-custom {
        width: 100%;
        max-width: 1150px;
        margin: auto;
    }

    .row-main {
        display: flex;
    }

        .row-main.left-col {
            width: 50%;
            /*float: left;*/
        }

        .row-main.righ-col {
            width: 50%;
            /*float: right;*/
        }

    ul.in-grad {
        padding: 0;
        list-style-type: none;
    }

        ul.in-grad li {
            position: relative;
            margin-bottom: 12px;
            font-size: 16px;
            color: #000;
            font-weight: 500;
            padding-left: 20px;
        }

            ul.in-grad li span {
                color: darkgray;
                font-size: 14px;
                font-style: italic;
            }

            ul.in-grad li:before {
                position: absolute;
                content: '';
                background: #f1823b;
                width: 7px;
                height: 7px;
                left: 0;
                top: 8px;
                border-radius: 100%;
            }

    section.gradients {
        padding-bottom: 100px;
    }
</style>
@if (!User.Identity.IsAuthenticated)
{
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Login or Register To create todo list</p>

    <p><img src="~/images/Marketing_image.jpg" /></p>
</div>
}
else
{
    <section class="gradients">
        <div class="container-custom">
            <div class="row-main">
                <div class="left-col">
                    <h3>Recent Completed Tasks</h3>
                    <ul class="in-grad">
                        @for (int i = 0; i < Model.Count; i++)
                        {
                            if (Model[i].Done)
                            {
                                DateTime td = DateTime.Now;
                                DateTime yd = DateTime.Today.AddDays(-1);
                                if (yd <= Model[i].Done_Date)
                                {
                                    <li>@Model[i].Title <span>@Model[i].Done_Date</span></li>
                                    <button onclick="copy('@Model[i].Title')">Copy the title</button>
                                }

                            }
                        }
                    </ul>
                </div>
                <div class="righ-col">
                    <h3>Remaining Tasks</h3>
                    <ul class="in-grad">
                        @for (int i = 0; i < Model.Count; i++)
                        {
                            if (!Model[i].Done)
                            {
                                DateTime tod = DateTime.Today.AddDays(1);
                                DateTime td = DateTime.Now;
                                if (td < Model[i].Due_Date && Model[i].Due_Date < tod)
                                {
                                    <li>@Model[i].Title <span>@Model[i].Due_Date</span></li>
                                    <button onclick="copy('@Model[i].Title')">Copy the title</button>
                                }
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </section>

}

@section Scripts
    {
    <script>
        if (navigator.serviceWorker) {
            navigator.serviceWorker.register('js/ServiceWorker.js');
        }

    </script>
    <script>
        var status;
        if (navigator.onLine) {
            status = true;
        }
        else {
            status = false;
        }
    </script>
    <script>
        async function copy(text) []
            const queryOpts = { name: 'clipboard-read', allowWithoutGesture: false };
            const permissionStatus = await navigator.permissions.query(queryOpts);
            if (permissionStatus.state == 'granted') {
                navigator.clipboard.writeText(text);
            }

            else if (permissionStatus.state == 'denied') {
                alert("Permission Failed");
            }
        }
    </script>
}
